require File.dirname(__FILE__) + "/spec_helper"

describe Chicago::MigrationFileWriter do
  before :each do
    @mock_db = mock(:db)
    @mock_db.should_receive(:database_type).and_return(:generic)
    @builder = MigrationFileWriter.new(@mock_db, "schema")
  end

  it "should return a migration file name using the timestamp of now" do
    now = Time.local(2010, 1, 1, 12, 30)
    Time.should_receive(:now).and_return(now)
    @builder.migration_file.should == "schema/20100101123000_auto_migration.rb"
  end

  it "should write out a migration file generated by Sequel::MigrationBuilder" do
    dimension = mock(:dimension)
    Dimension.should_receive(:definitions).and_return([dimension])
    dimension.should_receive(:db_schema).and_return(:table => :definitions)
    Fact.should_receive(:definitions).and_return([])

    file = StringIO.new
    File.should_receive(:open).and_yield(file)

    migration_builder = mock(:migration_builder)
    Sequel::MigrationBuilder.should_receive(:new).with(@mock_db).and_return(migration_builder)
    migration_builder.should_receive(:generate_migration).with(:table => :definitions).and_return("migration content")

    @builder.write_migration_file
    file.rewind
    file.read.should == "migration content"
  end
end
